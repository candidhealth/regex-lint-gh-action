{
  "extends": [
    "react-app",
    "plugin:cypress/recommended",
    "prettier",
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:storybook/recommended"
  ],
  "overrides": [
    {
      "files": "src/components/**",
      "rules": {
        "import/no-unused-modules": "off"
      }
    }
  ],
  "plugins": ["simple-import-sort", "cypress", "prettier", "no-inline-styles"],
  "rules": {
    "arrow-body-style": ["warn", "as-needed"],
    "eqeqeq": ["error", "always", { "null": "never" }],
    // Its safe to have warnings only here, as they are treated as errors in CI
    // This allows faster development, since errors need to be fixed to be able
    // to see any changes.
    "prettier/prettier": "warn",
    "react/jsx-no-useless-fragment": "warn",
    "simple-import-sort/imports": "warn",
    "import/no-unused-modules": [
      "warn",
      {
        "unusedExports": true
      }
    ],
    "@typescript-eslint/no-unused-vars": "warn",
    "@typescript-eslint/no-redeclare": "warn",
    "no-inline-styles/no-inline-styles": "warn",

    // We should enable these eventually, but it will require some work:
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error"
  },
  "settings": {
    // settings for eslint-import-resolver-typescript so that eslint-plugin-import rules work with typescript
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {}
    }
  }
}